{"ast":null,"code":"/**\n * Utility for cloning an <svg/> as a <symbol/> within\n * the composition of svgstore output.\n */\n'use strict';\n\nvar SELECTOR_SVG = 'svg';\nvar TEMPLATE_SYMBOL = '<symbol/>';\nvar ATTRIBUTE_ID = 'id';\n/**\n * @param {string} id The id to be applied to the symbol tag\n * @param {string} child An object created by loading the content of the current file via the cheerio#load function.\n * @param {object} options for parsing the svg content\n * @return {object} symbol The final cheerio-aware object created by cloning the SVG contents\n * @see <a href=\"https://github.com/cheeriojs/cheerio\">The Cheerio Project</a>\n */\n\nfunction svgToSymbol(id, child, options) {\n  var svgElem = child(SELECTOR_SVG); // initialize a new <symbol> element\n\n  var symbol = child(TEMPLATE_SYMBOL);\n  symbol.attr(ATTRIBUTE_ID, id);\n  symbol.append(svgElem.contents());\n  return symbol;\n}\n\nmodule.exports = svgToSymbol;","map":{"version":3,"sources":["/Users/markharless/Desktop/test/node_modules/svgstore/src/utils/svg-to-symbol.js"],"names":["SELECTOR_SVG","TEMPLATE_SYMBOL","ATTRIBUTE_ID","svgToSymbol","id","child","options","svgElem","symbol","attr","append","contents","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAG,KAAnB;AACA,IAAIC,eAAe,GAAG,WAAtB;AACA,IAAIC,YAAY,GAAG,IAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,EAArB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;AACxC,MAAIC,OAAO,GAAGF,KAAK,CAACL,YAAD,CAAnB,CADwC,CAGxC;;AACA,MAAIQ,MAAM,GAAGH,KAAK,CAACJ,eAAD,CAAlB;AAEAO,EAAAA,MAAM,CAACC,IAAP,CAAYP,YAAZ,EAA0BE,EAA1B;AACAI,EAAAA,MAAM,CAACE,MAAP,CAAcH,OAAO,CAACI,QAAR,EAAd;AAEA,SAAOH,MAAP;AACA;;AAEDI,MAAM,CAACC,OAAP,GAAiBV,WAAjB","sourcesContent":["/**\n * Utility for cloning an <svg/> as a <symbol/> within\n * the composition of svgstore output.\n */\n\n'use strict';\n\nvar SELECTOR_SVG = 'svg';\nvar TEMPLATE_SYMBOL = '<symbol/>';\nvar ATTRIBUTE_ID = 'id';\n\n/**\n * @param {string} id The id to be applied to the symbol tag\n * @param {string} child An object created by loading the content of the current file via the cheerio#load function.\n * @param {object} options for parsing the svg content\n * @return {object} symbol The final cheerio-aware object created by cloning the SVG contents\n * @see <a href=\"https://github.com/cheeriojs/cheerio\">The Cheerio Project</a>\n */\nfunction svgToSymbol(id, child, options) {\n\tvar svgElem = child(SELECTOR_SVG);\n\n\t// initialize a new <symbol> element\n\tvar symbol = child(TEMPLATE_SYMBOL);\n\n\tsymbol.attr(ATTRIBUTE_ID, id);\n\tsymbol.append(svgElem.contents());\n\n\treturn symbol;\n}\n\nmodule.exports = svgToSymbol;\n"]},"metadata":{},"sourceType":"script"}